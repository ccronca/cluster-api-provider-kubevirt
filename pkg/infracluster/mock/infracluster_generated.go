// Code generated by MockGen. DO NOT EDIT.
// Source: ./infracluster.go

// Package mock is a generated GoMock package.
package mock

import (
	"reflect"

	"github.com/golang/mock/gomock"
	"sigs.k8s.io/controller-runtime/pkg/client"

	"sigs.k8s.io/cluster-api-provider-kubevirt/pkg/context"
)

// MockInfraCluster is a mock of InfraCluster interface.
type MockInfraCluster struct {
	ctrl     *gomock.Controller
	recorder *MockInfraClusterMockRecorder
}

// MockInfraClusterMockRecorder is the mock recorder for MockInfraCluster.
type MockInfraClusterMockRecorder struct {
	mock *MockInfraCluster
}

// NewMockInfraCluster creates a new mock instance.
func NewMockInfraCluster(ctrl *gomock.Controller) *MockInfraCluster {
	mock := &MockInfraCluster{ctrl: ctrl}
	mock.recorder = &MockInfraClusterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfraCluster) EXPECT() *MockInfraClusterMockRecorder {
	return m.recorder
}

// GenerateInfraClusterClient mocks base method.
func (m *MockInfraCluster) GenerateInfraClusterClient(ctx *context.ClusterContext) (client.Client, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateInfraClusterClient", ctx)
	ret0, _ := ret[0].(client.Client)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateInfraClusterClient indicates an expected call of GenerateInfraClusterClient.
func (mr *MockInfraClusterMockRecorder) GenerateInfraClusterClient(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateInfraClusterClient", reflect.TypeOf((*MockInfraCluster)(nil).GenerateInfraClusterClient), ctx)
}
